openapi: 3.0.0
info:
  description: This is a users API
  version: 1.0.0
  title: Users
  license:
    name: Apache-2.0
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: users
    description: CRUD

paths:
  /users:
    get:
      tags:
        - users
      summary: Get all users
      operationId: getAll
      responses:
        "200":
          description: Success
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/UserList"
        "400":
          description: Bad Request

    post:
      tags:
        - users
      summary: Get all users
      operationId: create
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Success
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request

  /users/{sid}:
    get:
      tags:
        - users
      summary: Get a user by sid
      operationId: getBy
      parameters:
        - name: sid
          in: query
          schema:
            type: string
            minLength: 3
      responses:
        "200":
          description: Success
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request

    put:
      tags:
        - users
      summary: Update a user by sid
      operationId: update
      parameters:
        - name: sid
          in: query
          schema:
            type: string
            minLength: 3
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Success
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request

    delete:
      tags:
        - users
      summary: Delete a user by sid
      operationId: delete
      parameters:
        - name: sid
          in: query
          schema:
            type: string
            minLength: 3
      responses:
        "200":
          description: Success
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request

components:
  schemas:
    UserList:
      type: array
      items:
        $ref: "#/components/schemas/User"

    User:
      title: User
      description: Object that contains all the info about a user
      type: object
      properties:
        sid: { type: string }
        name: { type: string }
        age: { type: integer, minimum: 0, maximum: 120 }
      required: [ "name", "age" ]